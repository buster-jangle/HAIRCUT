/*
  ___   _   _   ___   _   _ _____ ___   _   __
 / _ \ | \ | | / _ \ | \ | |_   _/ _ \ | | / /
/ /_\ \|  \| |/ /_\ \|  \| | | |/ /_\ \| |/ / 
|  _  || . ` ||  _  || . ` | | ||  _  ||    \ 
| | | || |\  || | | || |\  | | || | | || |\  \
\_| |_/\_| \_/\_| |_/\_| \_/ \_/\_| |_/\_| \_/
                                                                       
Project HAIRCUT HAIRCUT.h library header
Initial file automatically generated by PROGENY on 06/21/23 02:40:35

 Template library header
*/


#ifndef HAIRCUT_DEF // prevent recursive inclusion
#define HAIRCUT_DEF

#include <string>
#include "plog/Log.h"
#include "plog/Initializers/RollingFileInitializer.h"

using namespace std; // default namespace

class HAIRCUT{
private:

public:
    ///
    int status;

    HAIRCUT();

    /// Library init function. Input a PLOG appender to allow the library to log through the parent executable.
    /// \param severity The minimum severity to report. ex: plog::info
    /// \return pointer to a plog appender
    bool init(plog::Severity severity, plog::IAppender* appender);

    ///  Multiplies two integers
    /// \param a
    /// \param b
    /// \return Result of a * b
    int multiply(int a, int b);

    /// Overloaded multiply function
    /// \param a
    /// \param b
    /// \return output
    float multiply(float a, float b);
};



#endif
